#!/usr/bin/env node

'use strict'

var rfr = require("rfr")
var async = require("async")
var forwarder = rfr("lib/forwarder")
var forwarderServiceFactory = rfr("lib/forwarderServiceFactory")()
var forwarderConfigReader = rfr("lib/forwarderConfigReader")()
var configReader = rfr("lib/configReader")()
var childProcess = require("child_process")
var applicationExecutor = rfr("lib/applicationExecutor")(childProcess)


var config = configReader.read()
var targetApplication = process.argv.slice(2).join(" ")

var child = applicationExecutor.run(targetApplication)
var inputRepository = rfr("lib/inputRepository")(child.getStatus())


async.parallel([
    (callback) => {
        forwarder(inputRepository, forwarderServiceFactory, forwarderConfigReader)
            .run(config)
            .then(
                () => callback(null, 0),
                err => callback(null, 1)
            )
    },
    (callback) => {
        child.wait().then(
            code => callback(null, code),
            err => callback(null, 1)
        )
    }
], (err, exitCode) => process.exit(exitCode))
