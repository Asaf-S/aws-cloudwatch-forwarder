#!/usr/bin/env node

'use strict'

var rfr = require("rfr")
var async = require("async")
var configReader = rfr("lib/configReader")()
var childProcess = require("child_process")
var applicationExecutor = rfr("lib/applicationExecutor")(childProcess)
var inputRepositoryFactory = rfr("lib/inputRepositoryFactory")()
var forwarderFactory = rfr("lib/forwarderFactory")()

var config = configReader.read()
var targetApplication = process.argv.slice(2).join(" ")

var child = applicationExecutor.run(targetApplication)
var inputRepository = inputRepositoryFactory.create(child.getStatus())
var forwarder = forwarderFactory.create(inputRepository)

async.parallel([
    (callback) => {
        forwarder
            .run(config)
            .then(
                () => callback(null, 0),
                err => callback(null, 1)
            )
    },
    (callback) => {
        child.wait().then(
            code => callback(null, code),
            err => callback(null, 1)
        )
    }
], (err, exitCodes) => {
    var exitCode = Math.max.apply(Math, exitCodes)
    process.exit(exitCode)
})
